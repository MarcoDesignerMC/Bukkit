package me.timer.bukkit;

import static org.bukkit.ChatColor.BLUE;
import static org.bukkit.ChatColor.GRAY;
import static org.bukkit.ChatColor.GREEN;
import static org.bukkit.ChatColor.ITALIC;
import static org.bukkit.ChatColor.RED;
import static org.bukkit.ChatColor.YELLOW;

import java.util.logging.Logger;

import me.timer.bukkit.Runnables.CountDown;
import me.timer.bukkit.Runnables.Start;
import me.timer.bukkit.Util.Util;

import org.bukkit.Bukkit;
import org.bukkit.Sound;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.plugin.PluginDescriptionFile;
import org.bukkit.plugin.java.JavaPlugin;

public final class MainClass extends JavaPlugin {

	CountDown cd;
	Start start;

	public static Object prefisso = YELLOW + "Ne" + BLUE + "xu" + RED + "s"
			+ GREEN + "UHC" + GRAY + " >> ";

	public final Logger log = Logger.getLogger("Minecraft");
	PluginDescriptionFile pdfFile = this.getDescription();

	@Override
	public void onEnable() {
		log.info(YELLOW + "UHCTimer has been enabled");
	}

	@Override
	public void onDisable() {
		getServer().getScheduler().cancelAllTasks();
		log.info(RED + "UHCTimer has been disabled");
	}

	@Override
	public boolean onCommand(CommandSender sender, Command cmd,
			String commandLabel, String[] args) {
		Player p = (Player) sender;
		/*
		 * 
		 * HA I PERMESSI E HA SCRITTO TIMER
		 */
		if (p.hasPermission("canStartTimer")
				&& commandLabel.equalsIgnoreCase("timer")) {

			// NON HA SCRITTO NULLA
			if (args.length == 0) {
				p.sendMessage(prefisso
						+ (GREEN + "Comando: /timer <start/stop>"));
				// HA SCRITTO START
			} else if (args[0].equalsIgnoreCase("start")) {
				startCount();

				// HA SCRITTO STOP
			} else if (args[0].equalsIgnoreCase("stop")) {
				Bukkit.broadcastMessage(prefisso
						+ (YELLOW + (ITALIC + "La UHC è stata fermata.")));
				Util.playSound(Sound.ITEM_BREAK, 1, 0);
				getServer().getScheduler().cancelAllTasks();
			}
			/*
			 * 
			 * NON HA I PERMESSI
			 */
		} else if (!p.hasPermission("canStartTimer")) {
			p.sendMessage(RED + "Scusa " + p.getName().toString()
					+ ", non hai accesso a questo comando.");
		}
		return false;
	}

	public void startCount() {
		start = new Start(this); // 20 minuti = 20m * 60s
		Bukkit.broadcastMessage(prefisso
				+ (RED + "La UHC è iniziata, vinca il team migliore."));
		start.runTaskTimer(this, 0, 2 * 20L);
		if(start.counter >= 6) startFinalCountDown();;
	}

	public void startFinalCountDown() {
		cd = new CountDown(this);
		cd.runTaskTimer(this, 0, 20L);
	}

}